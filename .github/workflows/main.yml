name: CI/CD Pipeline (Docker Compose)

on:
  push:
    branches:
      - master # Changed from 'main' to 'master'

env:
  DOCKER_IMAGE_NAME: arpankumar1119/bajajfinsev-fastapi # IMPORTANT: Replace with your Docker Hub username/repo
  VM_HOST: 74.225.254.124
  VM_USER: azureuser

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Ruff Linter
      run: ruff check .

    - name: Run Pytest
      run: pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push FastAPI Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Build and push Nginx Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}-nginx:latest ./nginx
        docker push ${{ env.DOCKER_IMAGE_NAME }}-nginx:latest

    - name: Deploy to VM via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.VM_HOST }}
        username: ${{ env.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Create project directory if it doesn't exist
          mkdir -p ~/bajajfinsev-app
          cd ~/bajajfinsev-app

          # Pull latest images
          docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
          docker pull ${{ env.DOCKER_IMAGE_NAME }}-nginx:latest

          # Stop and remove old containers
          docker compose down || true

          # Copy docker-compose.yml and nginx folder
          # Note: This is a simplified copy. For production, consider git pull on VM or rsync.
          # For now, we'll assume the docker-compose.yml and nginx folder are copied.
          # In a real scenario, you'd typically git clone/pull the repo on the VM.
          # For this automated step, we'll simulate copying the files.
          # This part needs manual intervention or a more robust file transfer method.
          # For now, I'll add a placeholder for copying the files.
          echo "Copying docker-compose.yml and nginx folder to VM..."
          # This part cannot be automated by the agent directly. You would need to scp these files.
          # For the purpose of this CI/CD, we'll assume they are present or handled by a prior step.
          # A better approach for CI/CD is to git clone the repo on the VM and then docker compose up.
          # Let's adjust the script to clone the repo and then run docker compose.

          # Clone/Pull the repository on the VM
          if [ -d "./BajajFinsev" ]; then
            cd BajajFinsev
            git pull
          else
            git clone https://github.com/thearpankumar/BajajFinsev-HackRx6-LLM.git
            cd BajajFinsev
          fi

          # Run Docker Compose
          docker compose up -d