name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE_NAME: arpankumar1119/hackrx-bajaj
  VM_HOST: 74.225.254.124
  VM_USER: azureuser
  PROJECT_DIR: ~/BajajFinsev # The project directory on your server

jobs:
  # ==================================
  #      CI Job: Validate Code
  # ==================================
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: pip install pip-tools

    - name: Compile and install dependencies
      run: |
        pip-compile requirements.in --output-file=requirements.txt
        pip install -r requirements.txt

    - name: Run Ruff Linter
      run: ruff check .

  # =====================================================
  #   Deploy Job: Build, Push to Registry, and Deploy
  # =====================================================
  Deploy:
    needs: CI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push FastAPI Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Deploy to VM via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.VM_HOST }}
        username: ${{ env.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Navigate to the project directory on the server
          cd ${{ env.PROJECT_DIR }}

          # Pull the latest code to get the latest docker-compose.yml
          echo ">>> Pulling latest code from Git..."
          git pull origin master

          # Use the production .env file
          echo ">>> Sourcing environment variables..."
          export $(cat .env | xargs)

          # Pull the new application image from Docker Hub
          echo ">>> Pulling latest Docker image..."
          docker compose pull fastapi-app

          # Restart the services with the new image
          echo ">>> Restarting services..."
          docker compose up -d
          
          echo ">>> Deployment complete!"