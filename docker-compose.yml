services:
  challenge-solver:
    image: arpankumar1119/hackrx-bajaj:latest
    container_name: challenge-solver-container
    command: python3 mcp_servers/challenge_solver.py 8004
    environment:
      # System Configuration
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    expose:
      - "8004"
    volumes:
      - ./downloads:/app/downloads:ro  # Read-only access to downloads
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  fastapi-app:
    image: arpankumar1119/hackrx-bajaj:latest
    container_name: fastapi-app-container
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 1
    environment:
      # API Keys
      - API_KEY=${API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Challenge Solver Configuration
      - CHALLENGE_SOLVER_URL=http://challenge-solver:8004
      
      # System Configuration
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - CUDA_VISIBLE_DEVICES=0
      
    expose:
      - "8000"
    volumes:
      - embedding_cache:/tmp/embedding_cache
      - vector_db:/app/vector_db
      - document_cache:/app/document_cache
      - ./downloads:/app/downloads:ro  # Read-only access to downloads
    depends_on:
      - challenge-solver
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/hackrx/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available/llmnow.dev.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - fastapi-app
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_MAXMEMORY=2gb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  certbot:
    image: certbot/certbot
    container_name: certbot-container
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network
    # This service runs on-demand, not continuously
    profiles:
      - tools

volumes:
  embedding_cache:
    driver: local
  vector_db:
    driver: local
  document_cache:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
