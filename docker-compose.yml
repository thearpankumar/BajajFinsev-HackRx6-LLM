services:
  qdrant:
    image: qdrant/qdrant:latest 
    container_name: qdrant-container
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  fastapi-app:
    image: arpankumar1119/hackrx-bajaj:latest
    container_name: fastapi-app-container
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 1
    environment:
      # API Keys
      - API_KEY=${API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Qdrant Configuration
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION_NAME=bajaj_documents
      - QDRANT_TIMEOUT=60
      - VECTOR_DIMENSION=1536
      
      # AI Models Configuration
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      - OPENAI_GENERATION_MODEL=${OPENAI_GENERATION_MODEL:-gpt-4o-mini}
      - GOOGLE_MODEL=${GOOGLE_MODEL:-gemini-2.5-flash-lite}
      
      # Document Processing Configuration
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - MAX_DOCUMENT_SIZE_MB=${MAX_DOCUMENT_SIZE_MB:-100}
      
      # Document Caching Configuration
      - ENABLE_PERSISTENT_DOCUMENT_CACHE=${ENABLE_PERSISTENT_DOCUMENT_CACHE:-true}
      - DOCUMENT_CACHE_PATH=/app/document_cache
      - DOCUMENT_CACHE_TTL_HOURS=${DOCUMENT_CACHE_TTL_HOURS:-168}
      - CHECK_VECTOR_DB_BEFORE_DOWNLOAD=${CHECK_VECTOR_DB_BEFORE_DOWNLOAD:-true}
      - SKIP_DUPLICATE_DOCUMENTS=${SKIP_DUPLICATE_DOCUMENTS:-true}
      - DOCUMENT_HASH_ALGORITHM=${DOCUMENT_HASH_ALGORITHM:-sha256}
      
      # Performance Configuration
      - FAST_MODE=${FAST_MODE:-true}
      - ENABLE_RERANKING=${ENABLE_RERANKING:-false}
      - MAX_CHUNKS_FOR_GENERATION=${MAX_CHUNKS_FOR_GENERATION:-5}
      - USE_ENHANCED_QUERY=${USE_ENHANCED_QUERY:-true}
      - USE_ENHANCED_RRF=${USE_ENHANCED_RRF:-true}
      
      # Enhanced Question Processing (NEW)
      - ENABLE_QUESTION_DECOMPOSITION=${ENABLE_QUESTION_DECOMPOSITION:-true}
      - COMPLEX_QUESTION_MAX_TOKENS=${COMPLEX_QUESTION_MAX_TOKENS:-250}
      - FAST_COMPLEX_QUESTIONS=${FAST_COMPLEX_QUESTIONS:-true}
      - ENABLE_QUERY_ENHANCEMENT=${ENABLE_QUERY_ENHANCEMENT:-true}
      
      # Parallel Processing Configuration
      - PARALLEL_PROCESSING=${PARALLEL_PROCESSING:-true}
      - MAX_PARALLEL_QUESTIONS=${MAX_PARALLEL_QUESTIONS:-40}
      - QUESTION_BATCH_SIZE=${QUESTION_BATCH_SIZE:-10}
      
      # Retrieval Configuration
      - TOP_K_RETRIEVAL=${TOP_K_RETRIEVAL:-20}
      - RERANK_TOP_K=${RERANK_TOP_K:-10}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.1}
      
      # Generation Configuration
      - MAX_GENERATION_TOKENS=${MAX_GENERATION_TOKENS:-180}
      - GENERATION_TEMPERATURE=${GENERATION_TEMPERATURE:-0.05}
      
      # Hybrid Search Configuration
      - DENSE_WEIGHT=${DENSE_WEIGHT:-0.7}
      - SPARSE_WEIGHT=${SPARSE_WEIGHT:-0.3}
      
      # System Configuration
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TOKENIZERS_PARALLELISM=false
      
    expose:
      - "8000"
    volumes:
      - embedding_cache:/tmp/embedding_cache
      - vector_db:/app/vector_db
      - document_cache:/app/document_cache
    depends_on:
      - qdrant
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/hackrx/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available/llmnow.dev.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - fastapi-app
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot-container
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network
    # This service runs on-demand, not continuously
    profiles:
      - tools

volumes:
  embedding_cache:
    driver: local
  vector_db:
    driver: local
  qdrant_data:
    driver: local
  document_cache:
    driver: local

networks:
  app-network:
    driver: bridge
