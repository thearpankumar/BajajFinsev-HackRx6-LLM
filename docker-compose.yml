# Fix Certbot Service Issue

## Solution 1: Add Certbot Service to Docker Compose

### Update your docker-compose.yml to include certbot service:

```yaml
services:
  fastapi-app:
    image: arpankumar1119/hackrx-bajaj:latest
    container_name: fastapi-app-container
    command: |
      sh -c "
        while ! pg_isready -h postgres -p 5432 -q -U user; do
          echo 'Waiting for database to be ready...'
          sleep 2
        done
        echo 'Database is ready. Running migrations...'
        alembic upgrade head
        echo 'Migrations complete. Starting application...'
        uvicorn src.main:app --host 0.0.0.0 --port 8000
      "
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bajaj_finsev_db
      - API_KEY=${API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=bajaj_finsev_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bajaj_finsev_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available/llmnow.dev.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - fastapi-app
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot-container
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network
    # This service runs on-demand, not continuously
    profiles:
      - tools

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
